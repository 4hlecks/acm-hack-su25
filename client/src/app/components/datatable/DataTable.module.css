.tableWrapper {
    border: 1px solid var(--tertiary-color);
    border-radius: var(--border-radius);
    overflow: auto;
}

/* Root <table> element. Set layout, width, border-collapse, etc. */
.table {
    width: 100%;
    height: 100%;
    border-collapse: separate;
    border-spacing: 0;
}

/* Draw ONLY internal vertical grid lines */
.th + .th,
.td + .td {
    border-left: 1px solid var(--tertiary-color);
}

/* Draw ONLY internal horizontal grid lines */
.tbody tr + tr .td {
    border-top: 1px solid var(--tertiary-color);
}

/* A dividing line under the header row (not an outer border) */
.thead .th {
    background-color: var(--secondary-color);
    border-bottom: 1px solid var(--tertiary-color);
    position: sticky;
    top: 0;
    z-index: 1;
}

.td {
    align-items: center;
    padding: 0.625rem 1rem;
    width: auto;
    text-align: left;
    vertical-align: middle;
}

/* <thead> group */
.thead {}

/* <tbody> group */
.tbody {
    background-color: var(--primary-color);
}

/* Shared <tr> styling for both header and body rows */
.row {
    height: 3rem;
}

/* Header cell <th> */
.th {
    transition:
        background-color 160ms ease;
}

.th[data-sortable] {
    cursor: pointer;
}

.th[data-sortable]:hover {
    background-color: var(--button-primary-hover);
}

/* Body cell <td>. Apply padding, borders, and text overflow handling. */
.td {
    text-align: left;
}

/* Inline container inside the header cell (button/span) to align icon, label, and sort icon. */
.thContent {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    font-size: var(--font-size-body);
    font-weight: var(--font-weight-subheading);
    width: 100%;
    height: 100%;
}

.thContent[data-sortable] {
    cursor: pointer;
}

/* Wrapper around the header icon. You can target the SVG directly with
   `.iconWrap > svg` for size/margins. */
.thContent > svg, .icon {
    aspect-ratio: 1 / 1;
    width: var(--icon-size-medium);
}